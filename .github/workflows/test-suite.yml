---
name: Test Suite

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "docs/**"
  schedule:
    - cron: "0 0 * * *"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: edgy
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v02
      - name: "Install dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install hatch
          scripts/install
      - name: Install Taskfile
        run: "pip install go-task-bin"
      - name: "Run linting"
        if: steps.filters.outputs.src == 'true' || steps.filters.outputs.workflows == 'true'
        run: "hatch fmt"
      # - name: "Run mypy"
      #   run: "hatch run test:check_types"
      #   if: steps.filters.outputs.src == 'true' || steps.filters.outputs.docs_src == 'true' || steps.filters.outputs.workflows == 'true'
      - name: "Run tests"
        # if: steps.filters.outputs.src == 'true' || steps.filters.outputs.workflows == 'true' || github.event.schedule != ''
        env:
          EDGY_SETTINGS_MODULE: guardian.configs.edgy.EdgyAppSettings
          EDGY_DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/guardian
        run: task test
